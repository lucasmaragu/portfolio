---
// Idiomas disponibles
const LANGUAGES = ["Español", "English"];
---

<div class="relative ml-1 mr-1">
  <button
    transition:persist
    id="language-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
  >
    <span class="sr-only">Selecciona el idioma</span>
    <span id="language-icon" class="text-sm font-medium transition-all">
      ES
    </span>
  </button>

  <div
    transition:persist
    id="language-menu"
    class="absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md"
  >
    <ul>
      {LANGUAGES.map((lang) => (
        <li
          class="language-option px-2 py-1.5 cursor-pointer hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm"
        >
          {lang}
        </li>
      ))}
    </ul>
  </div>
</div>

<style>
  #language-menu.open {
    display: inline;
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script is:inline>
  const languageMenu = document.getElementById("language-menu");
  const languageIcon = document.getElementById("language-icon");

  const getLanguagePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("language") ?? "Español";
    }
    return "Español";
  };

  const updateLanguage = () => {
    const langPreference = getLanguagePreference();
    
    // Remove both classes first
    document.documentElement.classList.remove("english", "spanish");
    
    // Add the appropriate class
    if (langPreference === "English") {
      document.documentElement.classList.add("english");
    } else {
      document.documentElement.classList.add("spanish");
    }

    languageIcon.textContent = langPreference === "English" ? "EN" : "ES";
  };

  updateLanguage();

  document.addEventListener("click", () => languageMenu.classList.remove("open"));

  document.getElementById("language-toggle-btn").addEventListener("click", (e) => {
    e.stopPropagation();
    const isClosed = !languageMenu.classList.contains("open");
    languageMenu.classList.toggle("open", isClosed);
  });

  document.querySelectorAll(".language-option").forEach((element) => {
    element.addEventListener("click", (e) => {
      const selectedLanguage = e.target.innerText.trim();
      localStorage.setItem("language", selectedLanguage);
      updateLanguage();
      
      // Add a subtle animation to the page
      document.body.style.transition = 'opacity 0.3s ease';
      document.body.style.opacity = '0.8';
      setTimeout(() => {
        document.body.style.opacity = '1';
      }, 300);
    });
  });

  document.addEventListener("astro:after-swap", () => {
    updateLanguage();
    window.scrollTo({ left: 0, top: 0, behavior: "instant" });
  });
</script>

